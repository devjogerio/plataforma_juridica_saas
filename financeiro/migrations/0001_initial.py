# Generated by Django 4.2.23 on 2025-08-16 14:51

from decimal import Decimal
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('clientes', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='ContaBancaria',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('nome_conta', models.CharField(help_text='Nome identificador da conta', max_length=100, verbose_name='Nome da Conta')),
                ('banco', models.CharField(max_length=100, verbose_name='Banco')),
                ('agencia', models.CharField(max_length=20, verbose_name='Agência')),
                ('numero_conta', models.CharField(max_length=30, verbose_name='Número da Conta')),
                ('tipo_conta', models.CharField(choices=[('corrente', 'Conta Corrente'), ('poupanca', 'Conta Poupança'), ('investimento', 'Conta Investimento')], max_length=15, verbose_name='Tipo de Conta')),
                ('saldo_inicial', models.DecimalField(decimal_places=2, default=Decimal('0.00'), max_digits=15, verbose_name='Saldo Inicial')),
                ('ativa', models.BooleanField(default=True, verbose_name='Ativa')),
                ('observacoes', models.TextField(blank=True, null=True, verbose_name='Observações')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Data de Criação')),
            ],
            options={
                'verbose_name': 'Conta Bancária',
                'verbose_name_plural': 'Contas Bancárias',
                'ordering': ['nome_conta'],
            },
        ),
        migrations.CreateModel(
            name='Despesa',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, help_text='Identificador único da despesa', primary_key=True, serialize=False)),
                ('tipo_despesa', models.CharField(choices=[('custas_judiciais', 'Custas Judiciais'), ('taxa_judiciaria', 'Taxa Judiciária'), ('pericia', 'Perícia'), ('diligencia', 'Diligência'), ('viagem', 'Viagem'), ('correios', 'Correios'), ('cartorio', 'Cartório'), ('publicacao', 'Publicação'), ('xerox', 'Xerox/Impressão'), ('telefone', 'Telefone'), ('internet', 'Internet'), ('material_escritorio', 'Material de Escritório'), ('outra', 'Outra')], max_length=25, verbose_name='Tipo de Despesa')),
                ('descricao', models.CharField(help_text='Descrição detalhada da despesa', max_length=500, verbose_name='Descrição')),
                ('valor', models.DecimalField(decimal_places=2, help_text='Valor da despesa', max_digits=15, validators=[django.core.validators.MinValueValidator(Decimal('0.01'))], verbose_name='Valor')),
                ('data_despesa', models.DateField(help_text='Data em que a despesa foi realizada', verbose_name='Data da Despesa')),
                ('status_reembolso', models.CharField(choices=[('nao_reembolsavel', 'Não Reembolsável'), ('pendente', 'Pendente de Reembolso'), ('reembolsado', 'Reembolsado'), ('cancelado', 'Cancelado')], default='pendente', max_length=20, verbose_name='Status de Reembolso')),
                ('data_reembolso', models.DateField(blank=True, null=True, verbose_name='Data de Reembolso')),
                ('fornecedor', models.CharField(blank=True, help_text='Nome do fornecedor ou prestador de serviço', max_length=200, null=True, verbose_name='Fornecedor')),
                ('numero_documento', models.CharField(blank=True, help_text='Número da nota fiscal, recibo, etc.', max_length=100, null=True, verbose_name='Número do Documento')),
                ('observacoes', models.TextField(blank=True, null=True, verbose_name='Observações')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Data de Criação')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Data de Atualização')),
            ],
            options={
                'verbose_name': 'Despesa',
                'verbose_name_plural': 'Despesas',
                'ordering': ['-data_despesa'],
            },
        ),
        migrations.CreateModel(
            name='Honorario',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, help_text='Identificador único do honorário', primary_key=True, serialize=False)),
                ('tipo_cobranca', models.CharField(choices=[('fixo', 'Valor Fixo'), ('por_hora', 'Por Hora'), ('por_exito', 'Por Êxito'), ('misto', 'Misto (Fixo + Êxito)'), ('pro_bono', 'Pro Bono')], max_length=15, verbose_name='Tipo de Cobrança')),
                ('valor_fixo', models.DecimalField(blank=True, decimal_places=2, help_text='Valor fixo do honorário', max_digits=15, null=True, validators=[django.core.validators.MinValueValidator(Decimal('0.00'))], verbose_name='Valor Fixo')),
                ('valor_hora', models.DecimalField(blank=True, decimal_places=2, help_text='Valor cobrado por hora trabalhada', max_digits=10, null=True, validators=[django.core.validators.MinValueValidator(Decimal('0.00'))], verbose_name='Valor por Hora')),
                ('horas_trabalhadas', models.DecimalField(blank=True, decimal_places=2, help_text='Total de horas trabalhadas no processo', max_digits=8, null=True, validators=[django.core.validators.MinValueValidator(Decimal('0.00'))], verbose_name='Horas Trabalhadas')),
                ('percentual_exito', models.DecimalField(blank=True, decimal_places=2, help_text='Percentual sobre o valor obtido em caso de êxito', max_digits=5, null=True, validators=[django.core.validators.MinValueValidator(Decimal('0.00')), django.core.validators.MaxValueValidator(Decimal('100.00'))], verbose_name='Percentual de Êxito (%)')),
                ('valor_exito', models.DecimalField(blank=True, decimal_places=2, help_text='Valor obtido no processo para cálculo do êxito', max_digits=15, null=True, validators=[django.core.validators.MinValueValidator(Decimal('0.00'))], verbose_name='Valor do Êxito')),
                ('valor_total', models.DecimalField(decimal_places=2, help_text='Valor total do honorário', max_digits=15, validators=[django.core.validators.MinValueValidator(Decimal('0.00'))], verbose_name='Valor Total')),
                ('status_pagamento', models.CharField(choices=[('pendente', 'Pendente'), ('parcial', 'Parcialmente Pago'), ('pago', 'Pago'), ('cancelado', 'Cancelado'), ('em_cobranca', 'Em Cobrança')], default='pendente', max_length=15, verbose_name='Status do Pagamento')),
                ('data_vencimento', models.DateField(verbose_name='Data de Vencimento')),
                ('data_pagamento', models.DateField(blank=True, null=True, verbose_name='Data de Pagamento')),
                ('forma_pagamento', models.CharField(blank=True, choices=[('dinheiro', 'Dinheiro'), ('transferencia', 'Transferência Bancária'), ('pix', 'PIX'), ('cartao_credito', 'Cartão de Crédito'), ('cartao_debito', 'Cartão de Débito'), ('boleto', 'Boleto Bancário'), ('cheque', 'Cheque')], max_length=20, null=True, verbose_name='Forma de Pagamento')),
                ('numero_parcelas', models.PositiveIntegerField(default=1, help_text='Quantidade de parcelas para pagamento', verbose_name='Número de Parcelas')),
                ('observacoes', models.TextField(blank=True, help_text='Informações adicionais sobre o honorário', null=True, verbose_name='Observações')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Data de Criação')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Data de Atualização')),
                ('cliente', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='honorarios', to='clientes.cliente', verbose_name='Cliente')),
            ],
            options={
                'verbose_name': 'Honorário',
                'verbose_name_plural': 'Honorários',
                'ordering': ['-data_vencimento'],
            },
        ),
        migrations.CreateModel(
            name='ParcelaHonorario',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('numero_parcela', models.PositiveIntegerField(verbose_name='Número da Parcela')),
                ('valor_parcela', models.DecimalField(decimal_places=2, max_digits=15, validators=[django.core.validators.MinValueValidator(Decimal('0.00'))], verbose_name='Valor da Parcela')),
                ('valor_pago', models.DecimalField(decimal_places=2, default=Decimal('0.00'), max_digits=15, validators=[django.core.validators.MinValueValidator(Decimal('0.00'))], verbose_name='Valor Pago')),
                ('data_vencimento', models.DateField(verbose_name='Data de Vencimento')),
                ('data_pagamento', models.DateField(blank=True, null=True, verbose_name='Data de Pagamento')),
                ('status', models.CharField(choices=[('pendente', 'Pendente'), ('pago', 'Pago'), ('cancelado', 'Cancelado')], default='pendente', max_length=10, verbose_name='Status')),
                ('observacoes', models.TextField(blank=True, null=True, verbose_name='Observações')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Data de Criação')),
                ('honorario', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='parcelas', to='financeiro.honorario', verbose_name='Honorário')),
            ],
            options={
                'verbose_name': 'Parcela de Honorário',
                'verbose_name_plural': 'Parcelas de Honorários',
                'ordering': ['honorario', 'numero_parcela'],
            },
        ),
    ]
