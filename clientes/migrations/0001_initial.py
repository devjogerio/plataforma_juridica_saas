# Generated by Django 4.2.23 on 2025-08-16 14:51

import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Cliente',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, help_text='Identificador único do cliente', primary_key=True, serialize=False)),
                ('tipo_pessoa', models.CharField(choices=[('PF', 'Pessoa Física'), ('PJ', 'Pessoa Jurídica')], help_text='Pessoa Física ou Jurídica', max_length=2, verbose_name='Tipo de Pessoa')),
                ('nome_razao_social', models.CharField(help_text='Nome completo (PF) ou Razão Social (PJ)', max_length=255, verbose_name='Nome/Razão Social')),
                ('cpf_cnpj', models.CharField(help_text='Documento de identificação', max_length=18, unique=True, verbose_name='CPF/CNPJ')),
                ('rg_ie', models.CharField(blank=True, help_text='RG (PF) ou Inscrição Estadual (PJ)', max_length=20, null=True, verbose_name='RG/Inscrição Estadual')),
                ('email', models.EmailField(blank=True, help_text='Endereço de e-mail para contato', max_length=254, null=True, verbose_name='E-mail')),
                ('telefone', models.CharField(blank=True, help_text='Número de telefone principal', max_length=20, null=True, validators=[django.core.validators.RegexValidator(message='Telefone deve estar no formato: (00) 0000-0000 ou (00) 00000-0000', regex='^\\(\\d{2}\\)\\s\\d{4,5}-\\d{4}$')], verbose_name='Telefone')),
                ('telefone_secundario', models.CharField(blank=True, max_length=20, null=True, validators=[django.core.validators.RegexValidator(message='Telefone deve estar no formato: (00) 0000-0000 ou (00) 00000-0000', regex='^\\(\\d{2}\\)\\s\\d{4,5}-\\d{4}$')], verbose_name='Telefone Secundário')),
                ('endereco', models.TextField(blank=True, help_text='Endereço completo', null=True, verbose_name='Endereço')),
                ('cidade', models.CharField(blank=True, max_length=100, null=True, verbose_name='Cidade')),
                ('estado', models.CharField(blank=True, choices=[('AC', 'Acre'), ('AL', 'Alagoas'), ('AP', 'Amapá'), ('AM', 'Amazonas'), ('BA', 'Bahia'), ('CE', 'Ceará'), ('DF', 'Distrito Federal'), ('ES', 'Espírito Santo'), ('GO', 'Goiás'), ('MA', 'Maranhão'), ('MT', 'Mato Grosso'), ('MS', 'Mato Grosso do Sul'), ('MG', 'Minas Gerais'), ('PA', 'Pará'), ('PB', 'Paraíba'), ('PR', 'Paraná'), ('PE', 'Pernambuco'), ('PI', 'Piauí'), ('RJ', 'Rio de Janeiro'), ('RN', 'Rio Grande do Norte'), ('RS', 'Rio Grande do Sul'), ('RO', 'Rondônia'), ('RR', 'Roraima'), ('SC', 'Santa Catarina'), ('SP', 'São Paulo'), ('SE', 'Sergipe'), ('TO', 'Tocantins')], max_length=2, null=True, verbose_name='Estado')),
                ('cep', models.CharField(blank=True, help_text='Código de Endereçamento Postal', max_length=10, null=True, verbose_name='CEP')),
                ('data_nascimento', models.DateField(blank=True, help_text='Data de nascimento (PF) ou fundação (PJ)', null=True, verbose_name='Data de Nascimento')),
                ('profissao', models.CharField(blank=True, help_text='Profissão (PF) ou atividade principal (PJ)', max_length=100, null=True, verbose_name='Profissão')),
                ('observacoes', models.TextField(blank=True, help_text='Informações adicionais sobre o cliente', null=True, verbose_name='Observações')),
                ('ativo', models.BooleanField(default=True, help_text='Define se o cliente está ativo no sistema', verbose_name='Ativo')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Data de Criação')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Data de Atualização')),
            ],
            options={
                'verbose_name': 'Cliente',
                'verbose_name_plural': 'Clientes',
                'ordering': ['nome_razao_social'],
            },
        ),
        migrations.CreateModel(
            name='ParteEnvolvida',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('nome', models.CharField(help_text='Nome completo da parte envolvida', max_length=255, verbose_name='Nome')),
                ('tipo_envolvimento', models.CharField(choices=[('reu', 'Réu'), ('advogado_contrario', 'Advogado Contrário'), ('testemunha', 'Testemunha'), ('perito', 'Perito'), ('assistente_tecnico', 'Assistente Técnico'), ('terceiro_interessado', 'Terceiro Interessado'), ('ministerio_publico', 'Ministério Público'), ('outro', 'Outro')], max_length=30, verbose_name='Tipo de Envolvimento')),
                ('cpf_cnpj', models.CharField(blank=True, max_length=18, null=True, verbose_name='CPF/CNPJ')),
                ('oab_numero', models.CharField(blank=True, help_text='Apenas para advogados', max_length=20, null=True, verbose_name='Número OAB')),
                ('oab_uf', models.CharField(blank=True, max_length=2, null=True, verbose_name='UF OAB')),
                ('email', models.EmailField(blank=True, max_length=254, null=True, verbose_name='E-mail')),
                ('telefone', models.CharField(blank=True, max_length=20, null=True, verbose_name='Telefone')),
                ('endereco', models.TextField(blank=True, null=True, verbose_name='Endereço')),
                ('observacoes', models.TextField(blank=True, null=True, verbose_name='Observações')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Data de Criação')),
            ],
            options={
                'verbose_name': 'Parte Envolvida',
                'verbose_name_plural': 'Partes Envolvidas',
                'ordering': ['nome'],
                'indexes': [models.Index(fields=['tipo_envolvimento'], name='clientes_pa_tipo_en_4df5e9_idx'), models.Index(fields=['nome'], name='clientes_pa_nome_0782c3_idx')],
            },
        ),
        migrations.CreateModel(
            name='InteracaoCliente',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('tipo_interacao', models.CharField(choices=[('ligacao', 'Ligação Telefônica'), ('email', 'E-mail'), ('reuniao', 'Reunião'), ('whatsapp', 'WhatsApp'), ('carta', 'Carta'), ('audiencia', 'Audiência'), ('outro', 'Outro')], max_length=20, verbose_name='Tipo de Interação')),
                ('data_interacao', models.DateTimeField(verbose_name='Data/Hora da Interação')),
                ('assunto', models.CharField(max_length=200, verbose_name='Assunto')),
                ('descricao', models.TextField(help_text='Detalhes da interação', verbose_name='Descrição')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Data de Criação')),
                ('cliente', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='interacoes', to='clientes.cliente', verbose_name='Cliente')),
            ],
            options={
                'verbose_name': 'Interação com Cliente',
                'verbose_name_plural': 'Interações com Clientes',
                'ordering': ['-data_interacao'],
            },
        ),
    ]
