# Generated by Django 4.2.23 on 2025-08-16 14:51

from django.conf import settings
import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Usuario',
            fields=[
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, help_text='Identificador único do usuário', primary_key=True, serialize=False)),
                ('tipo_usuario', models.CharField(choices=[('administrador', 'Administrador'), ('advogado', 'Advogado'), ('estagiario', 'Estagiário'), ('cliente', 'Cliente')], default='advogado', help_text='Define o perfil e permissões do usuário no sistema', max_length=20, verbose_name='Tipo de Usuário')),
                ('telefone', models.CharField(blank=True, help_text='Número de telefone para contato', max_length=20, null=True, verbose_name='Telefone')),
                ('oab_numero', models.CharField(blank=True, help_text='Número de registro na OAB (apenas para advogados)', max_length=20, null=True, verbose_name='Número OAB')),
                ('oab_uf', models.CharField(blank=True, help_text='Estado de registro na OAB', max_length=2, null=True, verbose_name='UF OAB')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Data de Criação')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Data de Atualização')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'Usuário',
                'verbose_name_plural': 'Usuários',
                'ordering': ['first_name', 'last_name'],
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Permissao',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('modulo', models.CharField(choices=[('processos', 'Processos'), ('clientes', 'Clientes'), ('documentos', 'Documentos'), ('financeiro', 'Financeiro'), ('relatorios', 'Relatórios'), ('configuracoes', 'Configurações'), ('usuarios', 'Usuários')], max_length=20, verbose_name='Módulo')),
                ('acao', models.CharField(choices=[('create', 'Criar'), ('read', 'Visualizar'), ('update', 'Editar'), ('delete', 'Excluir'), ('export', 'Exportar')], max_length=10, verbose_name='Ação')),
                ('permitido', models.BooleanField(default=True, help_text='Define se a ação é permitida ou negada', verbose_name='Permitido')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Data de Criação')),
                ('usuario', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='permissoes_customizadas', to=settings.AUTH_USER_MODEL, verbose_name='Usuário')),
            ],
            options={
                'verbose_name': 'Permissão',
                'verbose_name_plural': 'Permissões',
                'ordering': ['usuario', 'modulo', 'acao'],
                'unique_together': {('usuario', 'modulo', 'acao')},
            },
        ),
        migrations.CreateModel(
            name='AuditLog',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('acao', models.CharField(choices=[('login', 'Login'), ('logout', 'Logout'), ('create', 'Criação'), ('update', 'Atualização'), ('delete', 'Exclusão'), ('view', 'Visualização'), ('export', 'Exportação'), ('upload', 'Upload'), ('download', 'Download')], max_length=20, verbose_name='Ação')),
                ('modelo', models.CharField(help_text='Nome do modelo afetado', max_length=100, verbose_name='Modelo')),
                ('objeto_id', models.CharField(blank=True, help_text='Identificador do objeto afetado', max_length=100, null=True, verbose_name='ID do Objeto')),
                ('ip_address', models.GenericIPAddressField(verbose_name='Endereço IP')),
                ('user_agent', models.TextField(blank=True, null=True, verbose_name='User Agent')),
                ('detalhes', models.JSONField(blank=True, help_text='Informações adicionais sobre a ação', null=True, verbose_name='Detalhes')),
                ('timestamp', models.DateTimeField(auto_now_add=True, verbose_name='Data/Hora')),
                ('usuario', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='audit_logs', to=settings.AUTH_USER_MODEL, verbose_name='Usuário')),
            ],
            options={
                'verbose_name': 'Log de Auditoria',
                'verbose_name_plural': 'Logs de Auditoria',
                'ordering': ['-timestamp'],
                'indexes': [models.Index(fields=['usuario', '-timestamp'], name='usuarios_au_usuario_e9ebe0_idx'), models.Index(fields=['acao', '-timestamp'], name='usuarios_au_acao_f69b07_idx'), models.Index(fields=['modelo', '-timestamp'], name='usuarios_au_modelo_9c8de6_idx')],
            },
        ),
    ]
